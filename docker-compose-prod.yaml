version: '3.8'
services:

  reading-is-good:
    container_name: reading-is-good
    build: .
    ports:
      - "8080:8080"
    environment:
      KAFKA_HOST: kafka
      POSTGRES_HOST: postgre
      POSTGRES_DB: rig-db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      JAEGER_HOST: jaeger
    depends_on:
      - postgre
      - kafka

  postgre:
    container_name: postgre
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rig-db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - postgre_db_volume:/var/lib/postgresql/data

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.4.9
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:6.0.9
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_HOST_NAME:

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: always
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.39
    restart: always
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 16686:16686
      - 14268:14268

volumes:
  postgre_db_volume: